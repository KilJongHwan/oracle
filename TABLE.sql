CREATE TABLE EMP_DOL(
    EMPNO   NUMBER(4),
    ENAME   VARCHAR2(10),
    JOB     VARCHAR2(9),
    MGR     NUMBER(4),
    HIREDATE DATE,
    SAL     NUMBER(7,2),
    COMM    NUMBER(7,2),
    DEPTNO  NUMBER(2)
);

INSERT INTO EMP_DOL VALUES(9000, 'JESSY','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9001, 'ALICE','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9002, 'TINY','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9003, 'FAIRY','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9004, 'EMMA','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9005, 'EMILY','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9006, 'ISABELLA','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9007, 'OLIVIA','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9008, 'MIA','IDOL', 5000, SYSDATE, 3000, 2000, 10);
INSERT INTO EMP_DOL VALUES(9009, 'EVANJELIN','IDOL', 5000, SYSDATE, 3000, 2000, 10);

INSERT INTO EMP_DOL VALUES(9010, 'KAISA','IDOL', 5000, SYSDATE, 3000, 2000, 10, '+82010-1234-5678');
INSERT INTO EMP_DOL VALUES(9011, 'SOO','IDOL', 5000, SYSDATE, 3000, 2000, 1000, '+82010-1234-5678');

COMMIT;

SELECT * FROM EMP_DOL;

-- 테이블 변경하는 ALTER
-- ADD : 테이블에 열을 추가
-- RENAME : 열의 이름을 뼌꼉
-- MODIFY : 열의 데이터형을 변경
-- DROP : 열을 제거

-- 테이블에 열을 추가 : ADD
ALTER TABLE EMP_DOL
    ADD HP VARCHAR2(20);

-- 테이블의 열 이름 변경 : RENAME
ALTER TABLE EMP_DOL
    RENAME COLUMN HP TO TEL;

-- 테이블 열의 자료형 변경 : MODIFY
ALTER TABLE EMP_DOL
    MODIFY TEL VARCHAR2(20);

ALTER TABLE EMP_DOL -- 열의 데이터가 있어도 삭제
    DROP COLUMN TEL;

-- 테이블 이름을 변경하는 RENAME 
RENAME EMP_RENAME TO EMP_DOL;

-- 테이블의 데이터를 삭제하는 TRUNCATE
TRUNCATE TABLE EMP_DOL; -- DDL 명령어, ROLLBACK 불가

DELETE FROM EMP_DOL;    -- DML 명령어

-- 테이블을 삭제하는 DROP
DROP TABLE EMP_DOL;

-- 빈값을 허용하지 않는 NOT NULL
CREATE TABLE TABLE_NOTNULL(
    LOGIN_ID VARCHAR2(20) NOT NULL,
    LOGIN_PWD VARCHAR2(20) NOT NULL,
    TEL VARCHAR2(20)
);

INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD, TEL) VALUES('asd232', 'aaabbbccc', NULL);
INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD, TEL) VALUES('asd232', 'aaaccc', '010-1234-5678');
INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD, TEL) VALUES('asd232', NULL, '010-1234-5678');

SELECT * FROM TABLE_NOTNULL;

DROP TABLE TABLE_NOTNULL;

-- 중복되지 않는 값 : UNIQUE , NULL은 허용, 테이블 내에 여러 열에 존재 가능

CREATE TABLE TABLE_UNIQUE(
    LOGIN_ID VARCHAR2(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) NOT NULL,
    TEL VARCHAR2(20)
);

INSERT INTO TABLE_UNIQUE (LOGIN_ID, LOGIN_PWD, TEL) VALUES('asd232', 'aaabbbccc', NULL);
INSERT INTO TABLE_UNIQUE (LOGIN_ID, LOGIN_PWD, TEL) VALUES(NULL, 'aaabbbccc', NULL);


SELECT * FROM TABLE_UNIQUE;

DROP TABLE TABLE_UNIQUE;

-- 다른 테이블과 관계를 맺는 FOREIGN KEY
-- 외래키는 서로 다른 태이블간 관계를 정의하는데 사용하는 제약 조건
-- 참조하고 있는 기본키의 데이터타입과 일치해야 하며 외래키에 참조되는 기본키는 삭제할 수 없다.
CREATE TABLE DEPT_FK(
    DEPTNO NUMBER(2) PRIMARY KEY,
    DNAME  VARCHAR2(14),
    LOC    VARCHAR2(13)
);

CREATE TABLE EMP_FK(
    EMPNO   NUMBER(4) PRIMARY KEY,
    ENAME   VARCHAR2(10) NOT NULL,
    JOB     VARCHAR2(9),
    MGR     NUMBER(4),
    SAL     NUMBER(7,2),
    COMM    NUMBER(7,2),
    DEPTNO  NUMBER(2) REFERENCES DEPT_FK(DEPTNO)
);

INSERT INTO DEPT_FK VALUES(10, 'ENTERTAINMENT', 'SEOUL');
INSERT INTO EMP_FK VALUES(9000, 'JAMES', 'SINGER', 8000, 2300,1200, 10);

SELECT * FROM
EMP_FK E JOIN DEPT_FK D
ON E.DEPTNO = D.DEPTNO;

-- 데이터 형태와 범위를 정하는 CHECK
-- EX) ID 및 PASSWORD 길이 제한
-- EX) 유효값 범위 확인 (나이 / 성적 / 전화번호 / 이메일)

CREATE TABLE TABLE_CHECK(
    LOGIN_ID VARCHAR2(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) CHECK(LENGTH(LOGIN_PWD) > 5),
    TEL VARCHAR2(20)
);

INSERT INTO TABLE_CHECK VALUES('asd232', 'qwer12', '010-5555-2222');

SELECT * FROM TABLE_CHECK;

-- DEFAULT 제약 조건 : 특정 열에 저장할 값이 지정되지 않은 경우 기본값을 지정

CREATE TABLE TABLE_DEFAULT(
    LOGIN_ID VARCHAR2(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR2(20) CHECK(LENGTH(LOGIN_PWD) > 5),
    TEL VARCHAR2(15) DEFAULT '010-0000-0000'
);

INSERT INTO TABLE_DEFAULT(LOGIN_ID, LOGIN_PWD) VALUES('asd232', 'qwer12');

SELECT * FROM TABLE_DEFAULT;

DROP TABLE TABLE_DEFAULT;

-- 시퀀스란? 오라클에서 특정 규칙에 맞는 연속적인 숫자를 생성하는 객체 

CREATE TABLE DEPT_SEQ(
    DEPTNO NUMBER(2) PRIMARY KEY,
    DNAME  VARCHAR2(14),
    LOC    VARCHAR2(13)
);
CREATE SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 10 -- 증가값
START WITH 10 -- 시작값
MAXVALUE 90 -- 최대값
MINVALUE 0  -- 최소값
NOCYCLE
CACHE 2;

INSERT INTO DEPT_SEQ VALUES(SEQ_DEPT_SEQUENCE.NEXTVAL, 'FRONT', 'BUSAN');
SELECT * FROM DEPT_SEQ;
